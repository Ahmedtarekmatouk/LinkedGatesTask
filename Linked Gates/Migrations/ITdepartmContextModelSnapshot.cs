// <auto-generated />
using System;
using Linked_Gates.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Linked_Gates.Migrations
{
    [DbContext(typeof(ITdepartmContext))]
    partial class ITdepartmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Linked_Gates.Models.CategoryProperty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("PropertyID");

                    b.ToTable("categoryProperties");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            PropertyID = 5
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 1,
                            PropertyID = 8
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 2,
                            PropertyID = 2
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 2,
                            PropertyID = 3
                        },
                        new
                        {
                            ID = 5,
                            CategoryID = 2,
                            PropertyID = 4
                        },
                        new
                        {
                            ID = 6,
                            CategoryID = 2,
                            PropertyID = 5
                        },
                        new
                        {
                            ID = 7,
                            CategoryID = 2,
                            PropertyID = 6
                        },
                        new
                        {
                            ID = 8,
                            CategoryID = 2,
                            PropertyID = 7
                        });
                });

            modelBuilder.Entity("Linked_Gates.Models.Device", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("AcquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("devices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            AcquisitionDate = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 2,
                            DeviceName = "HP Laptop 1190",
                            Memo = "Office use"
                        },
                        new
                        {
                            ID = 2,
                            AcquisitionDate = new DateTime(2021, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 1,
                            DeviceName = "Canon Printer X",
                            Memo = "Print room"
                        },
                        new
                        {
                            ID = 3,
                            AcquisitionDate = new DateTime(2020, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CategoryID = 2,
                            DeviceName = "Dell Desktop 3000",
                            Memo = "Gaming"
                        });
                });

            modelBuilder.Entity("Linked_Gates.Models.DeviceCategories", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DeviceCategories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Printer"
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Laptop"
                        });
                });

            modelBuilder.Entity("Linked_Gates.Models.DevicePropertyValue", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DeviceID")
                        .HasColumnType("int");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.Property<string>("PropertyValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DeviceID");

                    b.HasIndex("PropertyID");

                    b.ToTable("devicePropertyValues");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DeviceID = 1,
                            PropertyID = 2,
                            PropertyValue = "Core i7"
                        },
                        new
                        {
                            ID = 2,
                            DeviceID = 1,
                            PropertyID = 3,
                            PropertyValue = "16 GB"
                        },
                        new
                        {
                            ID = 3,
                            DeviceID = 1,
                            PropertyID = 4,
                            PropertyValue = "15.6 inches"
                        },
                        new
                        {
                            ID = 4,
                            DeviceID = 1,
                            PropertyID = 5,
                            PropertyValue = "192.168.1.5"
                        },
                        new
                        {
                            ID = 5,
                            DeviceID = 1,
                            PropertyID = 6,
                            PropertyValue = "HP"
                        },
                        new
                        {
                            ID = 6,
                            DeviceID = 1,
                            PropertyID = 7,
                            PropertyValue = "Mohamed Mohsen"
                        },
                        new
                        {
                            ID = 7,
                            DeviceID = 2,
                            PropertyID = 5,
                            PropertyValue = "192.168.1.10"
                        },
                        new
                        {
                            ID = 8,
                            DeviceID = 2,
                            PropertyID = 6,
                            PropertyValue = "Canon"
                        },
                        new
                        {
                            ID = 9,
                            DeviceID = 3,
                            PropertyID = 2,
                            PropertyValue = "AMD Ryzen 5"
                        },
                        new
                        {
                            ID = 10,
                            DeviceID = 3,
                            PropertyID = 3,
                            PropertyValue = "8 GB"
                        },
                        new
                        {
                            ID = 11,
                            DeviceID = 3,
                            PropertyID = 6,
                            PropertyValue = "Dell"
                        });
                });

            modelBuilder.Entity("Linked_Gates.Models.Property", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("PropertyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("properties");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PropertyDescription = "HD"
                        },
                        new
                        {
                            ID = 2,
                            PropertyDescription = "Processor"
                        },
                        new
                        {
                            ID = 3,
                            PropertyDescription = "RAM"
                        },
                        new
                        {
                            ID = 4,
                            PropertyDescription = "Display"
                        },
                        new
                        {
                            ID = 5,
                            PropertyDescription = "IP Address"
                        },
                        new
                        {
                            ID = 6,
                            PropertyDescription = "Brand"
                        },
                        new
                        {
                            ID = 7,
                            PropertyDescription = "Current User"
                        },
                        new
                        {
                            ID = 8,
                            PropertyDescription = "Is Color"
                        });
                });

            modelBuilder.Entity("Linked_Gates.Models.CategoryProperty", b =>
                {
                    b.HasOne("Linked_Gates.Models.DeviceCategories", "Category")
                        .WithMany("CategoryProperties")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Linked_Gates.Models.Property", "Property")
                        .WithMany("CategoryProperties")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Linked_Gates.Models.Device", b =>
                {
                    b.HasOne("Linked_Gates.Models.DeviceCategories", "Category")
                        .WithMany("Devices")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Linked_Gates.Models.DevicePropertyValue", b =>
                {
                    b.HasOne("Linked_Gates.Models.Device", "Device")
                        .WithMany("DevicePropertyValues")
                        .HasForeignKey("DeviceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Linked_Gates.Models.Property", "Property")
                        .WithMany("DevicePropertyValues")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Linked_Gates.Models.Device", b =>
                {
                    b.Navigation("DevicePropertyValues");
                });

            modelBuilder.Entity("Linked_Gates.Models.DeviceCategories", b =>
                {
                    b.Navigation("CategoryProperties");

                    b.Navigation("Devices");
                });

            modelBuilder.Entity("Linked_Gates.Models.Property", b =>
                {
                    b.Navigation("CategoryProperties");

                    b.Navigation("DevicePropertyValues");
                });
#pragma warning restore 612, 618
        }
    }
}
